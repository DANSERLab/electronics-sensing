import processing.serial.*;

PFont p1, p2, mbFont;

Serial cPort;
int comPort;

int lastTimeKey;



public void setup() {
  frameRate(60);
  size(1000, 1000);
  background(bgColor);
  noStroke();
  noLoop();


  comPort = findPort();
  cPort = new Serial(this, Serial.list()[comPort], 192000);

  p1 = createFont("Arial", 20); 
  mbFont = createFont("Arial", 12);

  mainPanel = new MainPanel(this);
}

void draw() {
  mainPanel.draw();
}

void bgThread() {
  if (millis() - lastTimeKey == 30) {
    thread("updateDisplay");
  }
  if (millis() - lastTimeKey == 5) {
    getSamples();
  }
}

void updateDisplay() {
  draw();
}

void getSamples() {
}

int findPort() {
  println("Searching for available com port from list:");
  println(Serial.list());
  for (int i = 0; i < Serial.list().length; i++) {
    if (Serial.list()[i] != null) {
      println("\n\n\n\n" + "Connected to " + Serial.list()[i]);
      return(i);
    }
  }
  delay(1);
  findPort();
  return(0);
}

void startRecording() {
  println(filePath);
  if (filePath == null) {
    println("Make sure to set a file output!");
    selectOutput("Select a file to write to:", "fileSelected");
  }
  RECORDING = true;
  fileOutput.print("#" + " t ");
  for (int i = 1; i < numAFEs+1; i++) {
    for (int j = 1; j < numChannels+1; j++) {
      fileOutput.print("AFE" + str(i) + "_" + str(j) + "\t");
    }
  }
  fileOutput.println();
}

void stopRecording() {
  fileOutput.flush();
  fileOutput.close();
  RECORDING = false;
}